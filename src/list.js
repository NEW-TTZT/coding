/**
 * 手写 Object.create
 * 1. 创建一个空F函数
 * 2. 把传入的参数 赋值给 F函数的原型对象
 * 3. 返回 new这个F函数
 */


/**
 * 手写 instanceof
 * 1. 获取第一个参数的类型的原型 Object.getPrototypeOf()
 * 2. 获取第二个参数的原型对象
 * 3. 循环判断 类型原型和原型对象对比，循环获取第一个参数的类型的原型，判断成功返回t，获取到最后类型的原型为空返回f
 */

/**
 * 手写 new
 * 1. 创建一个空对象
 * 2. 设置原型，将空对的原型设置为函数的prototype对象
 * 3. 让函数的this指向这个对象，执行构造函数的代码（为这个新对象添加属性）
 * 4. 判断函数的返回值类型，如果是值类型、返回创建的对象，如果是引用类型、返回这个引用类型
 */

/**
 * 手写 call
 * 
 */

/**
 * 手写 apply
 */

/**
 * 手写 bind
 */
